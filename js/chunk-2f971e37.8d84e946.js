(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2f971e37"],{1406:function(e,n,t){n=e.exports=t("2350")(!1),n.push([e.i,"button[data-v-282e4ec1]{margin-right:.5rem}",""])},"18ab":function(e,n,t){"use strict";t.r(n);var o=function(){var e=this,n=e._self._c;return n("div",[e._m(0),n("div",{staticClass:"content-section implementation"},[n("div",{staticClass:"card"},[n("h5",[e._v("Basic")]),n("Tree",{attrs:{value:e.nodes}}),n("h5",[e._v("Programmatic Control")]),n("div",{staticStyle:{"margin-bottom":"1em"}},[n("Button",{attrs:{type:"button",icon:"pi pi-plus",label:"Expand All"},on:{click:e.expandAll}}),n("Button",{attrs:{type:"button",icon:"pi pi-minus",label:"Collapse All"},on:{click:e.collapseAll}})],1),n("Tree",{attrs:{value:e.nodes,expandedKeys:e.expandedKeys}})],1)]),n("TreeDoc")],1)},d=[function(){var e=this,n=e._self._c;return n("div",{staticClass:"content-section introduction"},[n("div",{staticClass:"feature-intro"},[n("h1",[e._v("Tree")]),n("p",[e._v("Tree is used to display hierarchical data.")])])])}],i=(t("8e6e"),t("ac6a"),t("456d"),t("ac4d"),t("8a81"),t("5df3"),t("1c4c"),t("7f7f"),t("6b54"),t("bd86")),a=t("82f4"),l=function(){var e=this,n=e._self._c;return n("div",{staticClass:"content-section documentation"},[n("TabView",[n("TabPanel",{attrs:{header:"Documentation"}},[n("h5",[e._v("Import")]),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport Tree from 'primevue/tree';\n")]),n("h5",[e._v("Getting Started")]),n("p",[e._v("Tree component requires an array of TreeNode objects as its "),n("i",[e._v("value")]),e._v(".")]),n("h5",[e._v("TreeNode API utilized by the Tree")]),n("div",{staticClass:"doc-tablewrapper"},[n("table",{staticClass:"doc-table"},[n("thead",[n("tr",[n("th",[e._v("Name")]),n("th",[e._v("Type")]),n("th",[e._v("Default")]),n("th",[e._v("Description")])])]),n("tbody",[n("tr",[n("td",[e._v("key")]),n("td",[e._v("any")]),n("td",[e._v("null")]),n("td",[e._v("Mandatory unique key of the node.")])]),n("tr",[n("td",[e._v("label")]),n("td",[e._v("string")]),n("td",[e._v("null")]),n("td",[e._v("Label of the node.")])]),n("tr",[n("td",[e._v("data")]),n("td",[e._v("any")]),n("td",[e._v("null")]),n("td",[e._v("Data represented by the node.")])]),n("tr",[n("td",[e._v("type")]),n("td",[e._v("string")]),n("td",[e._v("null")]),n("td",[e._v("Type of the node to match a template.")])]),n("tr",[n("td",[e._v("icon")]),n("td",[e._v("string")]),n("td",[e._v("null")]),n("td",[e._v("Icon of the node to display next to content.")])]),n("tr",[n("td",[e._v("children")]),n("td",[e._v("TreeNode[]")]),n("td",[e._v("null")]),n("td",[e._v("An array of treenodes as children.")])]),n("tr",[n("td",[e._v("style")]),n("td",[e._v("string")]),n("td",[e._v("null")]),n("td",[e._v("Inline style of the node.")])]),n("tr",[n("td",[e._v("styleClass")]),n("td",[e._v("string")]),n("td",[e._v("null")]),n("td",[e._v("Style class of the node.")])]),n("tr",[n("td",[e._v("selectable")]),n("td",[e._v("boolean")]),n("td",[e._v("null")]),n("td",[e._v("Whether the node is selectable when selection mode is enabled.")])]),n("tr",[n("td",[e._v("leaf")]),n("td",[e._v("boolean")]),n("td",[e._v("null")]),n("td",[e._v("Specifies if the node has children. Used in lazy loading.")])])])])]),n("p",[e._v("Example below loads the tree nodes from a remote datasource via a service called NodeService.")]),n("CodeHighlight",[[e._v('\n<Tree :value="nodes"></Tree>\n')]],2),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    }\n}\n")]),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nexport default class NodeService {\n\n    getTreeNodes() {\n        return fetch('demo/data/treenodes.json').then(res => res.json()).then(d => d.data);\n    }\n\n}\n")]),n("p",[e._v("The json response sample would be as following.")]),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v('\n{\n    "root": [\n        {\n            "key": "0",\n            "label": "Documents",\n            "data": "Documents Folder",\n            "icon": "pi pi-fw pi-inbox",\n            "children": [{\n                "key": "0-0",\n                "label": "Work",\n                "data": "Work Folder",\n                "icon": "pi pi-fw pi-cog",\n                "children": [{ "key": "0-0-0", "label": "Expenses.doc", "icon": "pi pi-fw pi-file", "data": "Expenses Document" }, { "key": "0-0-1", "label": "Resume.doc", "icon": "pi pi-fw pi-file", "data": "Resume Document" }]\n            },\n            {\n                "key": "0-1",\n                "label": "Home",\n                "data": "Home Folder",\n                "icon": "pi pi-fw pi-home",\n                "children": [{ "key": "0-1-0", "label": "Invoices.txt", "icon": "pi pi-fw pi-file", "data": "Invoices for this month" }]\n            }]\n        },\n        {\n            "key": "1",\n            "label": "Events",\n            "data": "Events Folder",\n            "icon": "pi pi-fw pi-calendar",\n            "children": [\n                { "key": "1-0", "label": "Meeting", "icon": "pi pi-fw pi-calendar-plus", "data": "Meeting" },\n                { "key": "1-1", "label": "Product Launch", "icon": "pi pi-fw pi-calendar-plus", "data": "Product Launch" },\n                { "key": "1-2", "label": "Report Review", "icon": "pi pi-fw pi-calendar-plus", "data": "Report Review" }]\n        },\n        {\n            "key": "2",\n            "label": "Movies",\n            "data": "Movies Folder",\n            "icon": "pi pi-fw pi-star-fill",\n            "children": [{\n                "key": "2-0",\n                "icon": "pi pi-fw pi-star-fill",\n                "label": "Al Pacino",\n                "data": "Pacino Movies",\n                "children": [{ "key": "2-0-0", "label": "Scarface", "icon": "pi pi-fw pi-video", "data": "Scarface Movie" }, { "key": "2-0-1", "label": "Serpico", "icon": "pi pi-fw pi-video", "data": "Serpico Movie" }]\n            },\n            {\n                "key": "2-1",\n                "label": "Robert De Niro",\n                "icon": "pi pi-fw pi-star-fill",\n                "data": "De Niro Movies",\n                "children": [{ "key": "2-1-0", "label": "Goodfellas", "icon": "pi pi-fw pi-video", "data": "Goodfellas Movie" }, { "key": "2-1-1", "label": "Untouchables", "icon": "pi pi-fw pi-video", "data": "Untouchables Movie" }]\n            }]\n        }\n    ]\n}\n')]),n("h5",[e._v("Programmatic Control")]),n("p",[e._v("Tree state can be controlled programmatically with the "),n("i",[e._v("expandedKeys")]),e._v(" property that defines the keys\n                    that are expanded. This property is a Map instance whose key is the key of a node and value is a boolean. Note that "),n("i",[e._v("expandedKeys")]),e._v(" also supports two-way binding with the sync modifier.\n                ")]),n("p",[e._v("Example below expands and collapses all nodes with buttons.")]),n("CodeHighlight",[[e._v('\n<div>\n    <Button type="button" icon="pi pi-plus" label="Expand All" @click="expandAll" />\n    <Button type="button" icon="pi pi-minus" label="Collapse All" @click="collapseAll" />\n</div>\n<Tree :value="nodes" :expandedKeys="expandedKeys"></Tree>\n')]],2),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            expandedKeys: {}\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        expandAll() {\n            for (let node of this.nodes) {\n                this.expandNode(node);\n            }\n\n            this.expandedKeys = {...this.expandedKeys};\n        },\n        collapseAll() {\n            this.expandedKeys = {};\n        },\n        expandNode(node) {\n            this.expandedKeys[node.key] = true;\n            if (node.children && node.children.length) {\n                for (let child of node.children) {\n                    this.expandNode(child);\n                }\n            }\n        }\n    }\n}\n")]),n("p",[e._v("To display some nodes as expanded by default, simply add their keys to the map.")]),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            expandedKeys: {}\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => {\n            this.nodes = data;\n            this.expandedKeys[this.nodes[0].key] = true;\n            this.expandedKeys[this.nodes[1].key] = true;\n        });\n    }\n}\n")]),n("h5",[e._v("Selection")]),n("p",[e._v("Tree supports "),n("b",[e._v("single")]),e._v(", "),n("b",[e._v("multiple")]),e._v(" and "),n("b",[e._v("checkbox")]),e._v(" selection modes. Define the "),n("i",[e._v("selectionKeys")]),e._v(" with the sync operator and the "),n("i",[e._v("selectionMode")]),e._v(" properties to enable the selection.\n                By default in multiple selection mode, metaKey is necessary to add to existing selections however this can be configured with "),n("i",[e._v("metaKeySelection")]),e._v(" property. Note that\n                in touch enabled devices, Tree does not require metaKey. In addition selection on a particular node can be disabled if the "),n("i",[e._v("selectable")]),e._v(" is false on the node instance.")]),n("p",[e._v("Similarly to the "),n("i",[e._v("expandedKeys")]),e._v(", "),n("i",[e._v("selectionKeys")]),e._v(' is a Map instance whose key is the key of a node and value is a boolean in "single" and "multiple" cases. On the other hand\n                in "checkbox" mode, instead of a boolean, value should be an object that has "checked" and "partialChecked" properties to represent the checked state of a node.')]),n("CodeHighlight",[[e._v('\n<h3>Single Selection</h3>\n<Tree :value="nodes" selectionMode="single" :selectionKeys.sync="selectedKey1"></Tree>\n\n<h3>Multiple Selection with MetaKey</h3>\n<Tree :value="nodes" selectionMode="multiple" :selectionKeys.sync="selectedKeys1"></Tree>\n\n<h3>Multiple Selection without MetaKey</h3>\n<Tree :value="nodes" selectionMode="multiple" :selectionKeys.sync="selectedKeys2" :metaKeySelection="false"></Tree>\n\n<h3>Checkbox Selection</h3>\n<Tree :value="nodes" selectionMode="checkbox" :selectionKeys.sync="selectedKeys3"></Tree>\n\n<h3>Events</h3>\n<Tree :value="nodes" selectionMode="single" :selectionKeys.sync="selectedKey2" :metaKeySelection="false"\n    @node-select="onNodeSelect" @node-unselect="onNodeUnselect"></Tree>\n')]],2),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        onNodeSelect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Selected', detail: node.label, life: 3000});\n        },\n        onNodeUnselect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Unselected', detail: node.label, life: 3000});\n        }\n    }\n}\n")]),n("p",[e._v("To display some nodes as selected by default, simply add their keys to the map.")]),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => {\n            this.nodes = data;\n\n            //single preselection\n            this.selectedKey1[this.nodes[0].key] = true;\n\n            //multiple preselection\n            this.selectedKeys2[this.nodes[0].key] = true;\n            this.selectedKeys2[this.nodes[1].key] = true;\n\n            //checkbox preselection\n            this.selectedKeys2[this.nodes[1].key] = {checked: true};\n        });\n    }\n}\n")]),n("h5",[e._v("Lazy")]),n("p",[e._v("Lazy Loading is handy to deal with huge datasets. Idea is instead of loading the whole tree, load child nodes on demand\n                    using expand expand. The important part is setting "),n("i",[e._v("leaf")]),e._v(" to true on a node instance so that even without children,\n                    tree would render an expand icon. Example below uses an in memory collection to mimic a lazy loading scenario with timeouts.\n                ")]),n("CodeHighlight",[[e._v('\n<Tree :value="nodes" @node-expand="onNodeExpand" :loading="loading"></Tree>\n')]],2),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            loading: false,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.loading = true;\n\n        setTimeout(() => {\n            this.nodes = this.initateNodes();\n            this.loading = false;\n        }, 2000);\n    },\n    methods: {\n        onNodeExpand(node) {\n            if (!node.children) {\n                this.loading = true;\n\n                setTimeout(() => {\n                    let _node = {...node};\n                    _node.children = [];\n\n                    for (let i = 0; i < 3; i++) {\n                        _node.children.push({\n                            key: node.key + '-' + i,\n                            label: 'Lazy ' + node.label + '-' + i\n                        });\n                    }\n\n                    let _nodes = {...this.nodes}\n                    _nodes[parseInt(node.key, 10)] = _node;\n\n                    this.nodes = _nodes;\n                    this.loading = false;\n                }, 500);\n            }\n        },\n        initateNodes() {\n            return [{\n                key: '0',\n                label: 'Node 0',\n                leaf: false\n            },\n            {\n                key: '1',\n                label: 'Node 1',\n                leaf: false\n            },\n            {\n                key: '2',\n                label: 'Node 2',\n                leaf: false\n            }];\n        }\n    }\n}\n")]),n("h5",[e._v("Templating")]),n("p",[e._v("The "),n("i",[e._v("type")]),e._v(" property of a TreeNode is used to map a template to a node to create the node label. If it is undefined and no default template is available,\n                label of the node is used.")]),n("CodeHighlight",[[e._v('\n<Tree :value="nodes">\n    <template #default="slotProps">\n        <b>{{slotProps.node.label}}</b>\n    </template>\n    <template #url="slotProps">\n        <a :href="slotProps.node.data">{{slotProps.node.label}}</a>\n    </template>\n</Tree>\n')]],2),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nexport default {\n    data() {\n        return {\n            nodes: [\n                {\n                    key: '0',\n                    label: 'Introduction',\n                    children: [\n                        {key: '0-0', label: 'What is Vue.js?', data:'https://vuejs.org/v2/guide/#What-is-Vue-js', type: 'url'},\n                        {key: '0-1', label: 'Getting Started', data: 'https://vuejs.org/v2/guide/#Getting-Started', type: 'url'},\n                        {key: '0-2', label: 'Declarative Rendering', data:'https://vuejs.org/v2/guide/#Declarative-Rendering', type: 'url'},\n                        {key: '0-3', label: 'Conditionals and Loops', data: 'https://vuejs.org/v2/guide/#Conditionals-and-Loops', type: 'url'}\n                    ]\n                },\n                {\n                    key: '1',\n                    label: 'Components In-Depth',\n                    children: [\n                        {key: '1-0', label: 'Component Registration', data: 'https://vuejs.org/v2/guide/components-registration.html', type: 'url'},\n                        {key: '1-1', llabel: 'Props', data: 'https://vuejs.org/v2/guide/components-props.html', type: 'url'},\n                        {key: '1-2', llabel: 'Custom Events', data: 'https://vuejs.org/v2/guide/components-custom-events.html', type: 'url'},\n                        {key: '1-3', llabel: 'Slots', data: 'https://vuejs.org/v2/guide/components-slots.html', type: 'url'}\n                    ]\n                }\n            ]\n        }\n    }\n}\n")]),n("h5",[e._v("Filtering")]),n("p",[e._v("Filtering is enabled by setting the "),n("i",[e._v("filter")]),e._v(" property to true, by default label property of a node\n                is used to compare against the value in the text field, in order to customize which field(s) should be used during search, define the "),n("i",[e._v("filterBy")]),e._v(" property as a comma separated list.")]),n("p",[e._v("In addition "),n("i",[e._v("filterMode")]),e._v(" specifies the filtering strategy. In "),n("b",[e._v("lenient")]),e._v(" mode when the query matches a node, children of the node are not searched further as all descendants of the node are included. On the other hand,\n                 in "),n("b",[e._v("strict")]),e._v(" mode when the query matches a node, filtering continues on all descendants.")]),n("CodeHighlight",[[e._v('\n<h3>Lenient Filter</h3>\n<Tree :value="nodes" :filter="true" filterMode="lenient"></Tree>\n\n<h3>Strict Filter</h3>\n<Tree :value="nodes" :filter="true" filterMode="strict"></Tree>\n')]],2),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            expandedKeys: {}\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        expandAll() {\n            for (let node of this.nodes) {\n                this.expandNode(node);\n            }\n\n            this.expandedKeys = {...this.expandedKeys};\n        },\n        collapseAll() {\n            this.expandedKeys = {};\n        },\n        expandNode(node) {\n            if (node.children << node.children.length) {\n                this.expandedKeys[node.key] = true;\n\n                for (let child of node.children) {\n                    this.expandNode(child);\n                }\n            }\n        }\n    }\n}\n")]),n("h5",[e._v("Properties")]),n("p",[e._v("Any property such as style and class are passed to the underlying root element. Following is the additional property to configure the component.")]),n("div",{staticClass:"doc-tablewrapper"},[n("table",{staticClass:"doc-table"},[n("thead",[n("tr",[n("th",[e._v("Name")]),n("th",[e._v("Type")]),n("th",[e._v("Default")]),n("th",[e._v("Description")])])]),n("tbody",[n("tr",[n("td",[e._v("value")]),n("td",[e._v("array")]),n("td",[e._v("null")]),n("td",[e._v("An array of treenodes.")])]),n("tr",[n("td",[e._v("expandedKeys")]),n("td",[e._v("array")]),n("td",[e._v("null")]),n("td",[e._v("A map of keys to represent the state of the tree expansion state in controlled mode.")])]),n("tr",[n("td",[e._v("selectionMode")]),n("td",[e._v("string")]),n("td",[e._v("null")]),n("td",[e._v('Defines the selection mode, valid values "single", "multiple", and "checkbox".')])]),n("tr",[n("td",[e._v("selectionKeys")]),n("td",[e._v("any")]),n("td",[e._v("null")]),n("td",[e._v("A map of keys to control the selection state.")])]),n("tr",[n("td",[e._v("metaKeySelection")]),n("td",[e._v("boolean")]),n("td",[e._v("true")]),n("td",[e._v("Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item\n                                    can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.")])]),n("tr",[n("td",[e._v("loading")]),n("td",[e._v("boolean")]),n("td",[e._v("false")]),n("td",[e._v("Whether to display loading indicator.")])]),n("tr",[n("td",[e._v("loadingIcon")]),n("td",[e._v("string")]),n("td",[e._v("pi pi-spin")]),n("td",[e._v("Icon to display when tree is loading.")])]),n("tr",[n("td",[e._v("filter")]),n("td",[e._v("boolean")]),n("td",[e._v("false")]),n("td",[e._v("When specified, displays an input field to filter the items.")])]),n("tr",[n("td",[e._v("filterBy")]),n("td",[e._v("string")]),n("td",[e._v("label")]),n("td",[e._v("When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.")])]),n("tr",[n("td",[e._v("filterMode")]),n("td",[e._v("string")]),n("td",[e._v("lenient")]),n("td",[e._v('Mode for filtering valid values are "lenient" and "strict". Default is lenient.')])]),n("tr",[n("td",[e._v("filterPlaceholder")]),n("td",[e._v("string")]),n("td",[e._v("null")]),n("td",[e._v("Placeholder text to show when filter input is empty.")])]),n("tr",[n("td",[e._v("filterLocale")]),n("td",[e._v("string")]),n("td",[e._v("undefined")]),n("td",[e._v("Locale to use in filtering. The default locale is the host environment's current locale.")])])])])]),n("h5",[e._v("Events")]),n("div",{staticClass:"doc-tablewrapper"},[n("table",{staticClass:"doc-table"},[n("thead",[n("tr",[n("th",[e._v("Name")]),n("th",[e._v("Parameters")]),n("th",[e._v("Description")])])]),n("tbody",[n("tr",[n("td",[e._v("node-select")]),n("td",[e._v("node: Node instance")]),n("td",[e._v("Callback to invoke when a node is selected.")])]),n("tr",[n("td",[e._v("node-unselect")]),n("td",[e._v("node: Node instance")]),n("td",[e._v("Callback to invoke when a node is unselected.")])]),n("tr",[n("td",[e._v("node-expand")]),n("td",[e._v("node: Node instance")]),n("td",[e._v("Callback to invoke when a node is expanded.")])]),n("tr",[n("td",[e._v("node-collapse")]),n("td",[e._v("node: Node instance")]),n("td",[e._v("Callback to invoke when a node is collapsed.")])])])])]),n("h5",[e._v("Styling")]),n("p",[e._v("Following is the list of structural style classes, for theming classes visit "),n("router-link",{attrs:{to:"/theming"}},[e._v("theming")]),e._v(" page.")],1),n("div",{staticClass:"doc-tablewrapper"},[n("table",{staticClass:"doc-table"},[n("thead",[n("tr",[n("th",[e._v("Name")]),n("th",[e._v("Element")])])]),n("tbody",[n("tr",[n("td",[e._v("p-tree")]),n("td",[e._v("Main container element")])]),n("tr",[n("td",[e._v("p-tree-horizontal")]),n("td",[e._v("Main container element in horizontal mode")])]),n("tr",[n("td",[e._v("p-tree-container")]),n("td",[e._v("Container of nodes")])]),n("tr",[n("td",[e._v("p-treenode")]),n("td",[e._v("A treenode element")])]),n("tr",[n("td",[e._v("p-treenode-content")]),n("td",[e._v("Content of a treenode")])]),n("tr",[n("td",[e._v("p-treenode-toggler")]),n("td",[e._v("Toggle element")])]),n("tr",[n("td",[e._v("p-treenode-toggler-icon")]),n("td",[e._v("Toggle icon")])]),n("tr",[n("td",[e._v("p-treenode-icon")]),n("td",[e._v("Icon of a treenode")])]),n("tr",[n("td",[e._v("p-treenode-label")]),n("td",[e._v("Label of a treenode")])]),n("tr",[n("td",[e._v("p-treenode-children")]),n("td",[e._v("Container element for node children")])])])])]),n("h5",[e._v("Dependencies")]),n("p",[e._v("None.")])],1),n("TabPanel",{attrs:{header:"Source"}},[n("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/primefaces/primevue/tree/2.x/src/views/tree",target:"_blank",rel:"noopener noreferrer"}},[n("span",[e._v("View on GitHub")])]),n("CodeHighlight",[[e._v('\n<h3>Basic</h3>\n<Tree :value="nodes"></Tree>\n\n<h3>Programmatic Control</h3>\n<div style="margin-bottom: 1em">\n    <Button type="button" icon="pi pi-plus" label="Expand All" @click="expandAll" />\n    <Button type="button" icon="pi pi-minus" label="Collapse All" @click="collapseAll" />\n</div>\n<Tree :value="nodes" :expandedKeys="expandedKeys"></Tree>\n')]],2),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            expandedKeys: {}\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        expandAll() {\n            for (let node of this.nodes) {\n                this.expandNode(node);\n            }\n\n            this.expandedKeys = {...this.expandedKeys};\n        },\n        collapseAll() {\n            this.expandedKeys = {};\n        },\n        expandNode(node) {\n            if (node.children && node.children.length) {\n                this.expandedKeys[node.key] = true;\n\n                for (let child of node.children) {\n                    this.expandNode(child);\n                }\n            }\n        }\n    }\n}\n")])],1)],1)],1)},s=[],r=t("2877"),c={},v=Object(r["a"])(c,l,s,!1,null,null,null),h=v.exports;function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){Object(i["a"])(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function f(e,n){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=y(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var o=0,d=function(){};return{s:d,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:d}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,l=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return a=e.done,e},e:function(e){l=!0,i=e},f:function(){try{a||null==t.return||t.return()}finally{if(l)throw i}}}}function y(e,n){if(e){if("string"==typeof e)return _(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_(e,n):void 0}}function _(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var m={data:function(){return{nodes:null,expandedKeys:{}}},nodeService:null,created:function(){this.nodeService=new a["a"]},mounted:function(){var e=this;this.nodeService.getTreeNodes().then((function(n){return e.nodes=n}))},methods:{expandAll:function(){var e,n=f(this.nodes);try{for(n.s();!(e=n.n()).done;){var t=e.value;this.expandNode(t)}}catch(o){n.e(o)}finally{n.f()}this.expandedKeys=u({},this.expandedKeys)},collapseAll:function(){this.expandedKeys={}},expandNode:function(e){if(e.children&&e.children.length){this.expandedKeys[e.key]=!0;var n,t=f(e.children);try{for(t.s();!(n=t.n()).done;){var o=n.value;this.expandNode(o)}}catch(d){t.e(d)}finally{t.f()}}}},components:{TreeDoc:h}},g=m,b=(t("4777"),Object(r["a"])(g,o,d,!1,null,"282e4ec1",null));n["default"]=b.exports},"2a6b":function(e,n,t){var o=t("1406");o.__esModule&&(o=o.default),"string"===typeof o&&(o=[[e.i,o,""]]),o.locals&&(e.exports=o.locals);var d=t("499e").default;d("2ffb571c",o,!0,{sourceMap:!1,shadowMode:!1})},4777:function(e,n,t){"use strict";t("2a6b")},"82f4":function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var o=t("d225"),d=t("b0b4"),i=function(){function e(){Object(o["a"])(this,e)}return Object(d["a"])(e,[{key:"getTreeTableNodes",value:function(){return fetch("demo/data/treetablenodes.json").then((function(e){return e.json()})).then((function(e){return e.root}))}},{key:"getTreeNodes",value:function(){return fetch("demo/data/treenodes.json").then((function(e){return e.json()})).then((function(e){return e.root}))}}])}()}}]);