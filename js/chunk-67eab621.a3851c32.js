(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-67eab621"],{"79c1":function(e,n,t){"use strict";t.r(n);var l=function(){var e=this,n=e._self._c;return n("div",[e._m(0),n("div",{staticClass:"content-section implementation"},[n("div",{staticClass:"card"},[n("h5",[e._v("Single Selection")]),n("TreeTable",{attrs:{value:e.nodes,selectionMode:"single",selectionKeys:e.selectedKey1},on:{"update:selectionKeys":function(n){e.selectedKey1=n},"update:selection-keys":function(n){e.selectedKey1=n}}},[n("Column",{attrs:{field:"name",header:"Name",expander:!0}}),n("Column",{attrs:{field:"size",header:"Size"}}),n("Column",{attrs:{field:"type",header:"Type"}})],1)],1),n("div",{staticClass:"card"},[n("h5",[e._v("Multiple Selection with MetaKey")]),n("TreeTable",{attrs:{value:e.nodes,selectionMode:"multiple",selectionKeys:e.selectedKeys1},on:{"update:selectionKeys":function(n){e.selectedKeys1=n},"update:selection-keys":function(n){e.selectedKeys1=n}}},[n("Column",{attrs:{field:"name",header:"Name",expander:!0}}),n("Column",{attrs:{field:"size",header:"Size"}}),n("Column",{attrs:{field:"type",header:"Type"}})],1)],1),n("div",{staticClass:"card"},[n("h5",[e._v("Multiple Selection without MetaKey")]),n("TreeTable",{attrs:{value:e.nodes,selectionMode:"multiple",selectionKeys:e.selectedKeys2,metaKeySelection:!1},on:{"update:selectionKeys":function(n){e.selectedKeys2=n},"update:selection-keys":function(n){e.selectedKeys2=n}}},[n("Column",{attrs:{field:"name",header:"Name",expander:!0}}),n("Column",{attrs:{field:"size",header:"Size"}}),n("Column",{attrs:{field:"type",header:"Type"}})],1)],1),n("div",{staticClass:"card"},[n("h5",[e._v("Checkbox Selection")]),n("TreeTable",{attrs:{value:e.nodes,selectionMode:"checkbox",selectionKeys:e.selectedKeys3},on:{"update:selectionKeys":function(n){e.selectedKeys3=n},"update:selection-keys":function(n){e.selectedKeys3=n}}},[n("Column",{attrs:{field:"name",header:"Name",expander:!0}}),n("Column",{attrs:{field:"size",header:"Size"}}),n("Column",{attrs:{field:"type",header:"Type"}})],1)],1),n("div",{staticClass:"card"},[n("h5",[e._v("Events")]),n("TreeTable",{attrs:{value:e.nodes,selectionMode:"single",selectionKeys:e.selectedKey2},on:{"update:selectionKeys":function(n){e.selectedKey2=n},"update:selection-keys":function(n){e.selectedKey2=n},"node-select":e.onNodeSelect,"node-unselect":e.onNodeUnselect}},[n("Column",{attrs:{field:"name",header:"Name",expander:!0}}),n("Column",{attrs:{field:"size",header:"Size"}}),n("Column",{attrs:{field:"type",header:"Type"}})],1)],1)]),n("div",{staticClass:"content-section documentation"},[n("TabView",[n("TabPanel",{attrs:{header:"Source"}},[n("CodeHighlight",[[e._v('\n<h3>Single Selection</h3>\n<TreeTable :value="nodes" selectionMode="single" :selectionKeys.sync="selectedKey1">\n    <Column field="name" header="Name" :expander="true"></Column>\n    <Column field="size" header="Size"></Column>\n    <Column field="type" header="Type"></Column>\n</TreeTable>\n\n<h3>Multiple Selection with MetaKey</h3>\n<TreeTable :value="nodes" selectionMode="multiple" :selectionKeys.sync="selectedKeys1">\n    <Column field="name" header="Name" :expander="true"></Column>\n    <Column field="size" header="Size"></Column>\n    <Column field="type" header="Type"></Column>\n</TreeTable>\n\n<h3>Multiple Selection without MetaKey</h3>\n<TreeTable :value="nodes" selectionMode="multiple" :selectionKeys.sync="selectedKeys2" :metaKeySelection="false">\n    <Column field="name" header="Name" :expander="true"></Column>\n    <Column field="size" header="Size"></Column>\n    <Column field="type" header="Type"></Column>\n</TreeTable>\n\n<h3>Checkbox Selection</h3>\n<TreeTable :value="nodes" selectionMode="checkbox" :selectionKeys.sync="selectedKeys3">\n    <Column field="name" header="Name" :expander="true"></Column>\n    <Column field="size" header="Size"></Column>\n    <Column field="type" header="Type"></Column>\n</TreeTable>\n\n<h3>Events</h3>\n<TreeTable :value="nodes" selectionMode="single" :selectionKeys.sync="selectedKey2"\n    @node-select="onNodeSelect" @node-unselect="onNodeUnselect">\n    <Column field="name" header="Name" :expander="true"></Column>\n    <Column field="size" header="Size"></Column>\n    <Column field="type" header="Type"></Column>\n</TreeTable>\n')]],2),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        onNodeSelect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Selected', detail: node.data.name, life: 3000});\n        },\n        onNodeUnselect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Unselected', detail: node.data.name, life: 3000});\n        }\n    }\n}\n")])],1)],1)],1)])},s=[function(){var e=this,n=e._self._c;return n("div",{staticClass:"content-section introduction"},[n("div",{staticClass:"feature-intro"},[n("h1",[e._v("TreeTable "),n("span",[e._v("Selection")])]),n("p",[e._v("TreeTable supports "),n("b",[e._v("single")]),e._v(", "),n("b",[e._v("multiple")]),e._v(" and "),n("b",[e._v("checkbox")]),e._v(" as selection modes.")])])])}],o=(t("7f7f"),t("82f4")),d={data:function(){return{selectedKey1:null,selectedKey2:null,selectedKeys1:null,selectedKeys2:null,selectedKeys3:null,nodes:null}},nodeService:null,created:function(){this.nodeService=new o["a"]},mounted:function(){var e=this;this.nodeService.getTreeTableNodes().then((function(n){return e.nodes=n}))},methods:{onNodeSelect:function(e){this.$toast.add({severity:"success",summary:"Node Selected",detail:e.data.name,life:3e3})},onNodeUnselect:function(e){this.$toast.add({severity:"success",summary:"Node Unselected",detail:e.data.name,life:3e3})}}},a=d,i=t("2877"),c=Object(i["a"])(a,l,s,!1,null,null,null);n["default"]=c.exports},"82f4":function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var l=t("d225"),s=t("b0b4"),o=function(){function e(){Object(l["a"])(this,e)}return Object(s["a"])(e,[{key:"getTreeTableNodes",value:function(){return fetch("demo/data/treetablenodes.json").then((function(e){return e.json()})).then((function(e){return e.root}))}},{key:"getTreeNodes",value:function(){return fetch("demo/data/treenodes.json").then((function(e){return e.json()})).then((function(e){return e.root}))}}])}()}}]);