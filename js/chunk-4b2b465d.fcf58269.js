(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-4b2b465d"],{"16a0":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e._self._c;return n("div",[e._m(0),n("div",{staticClass:"content-section implementation"},[n("div",{staticClass:"card"},[n("h5",[e._v("Fit Mode")]),n("TreeTable",{attrs:{value:e.nodes,resizableColumns:!0,columnResizeMode:"fit",showGridlines:""}},[n("Column",{attrs:{field:"name",header:"Name",expander:!0}}),n("Column",{attrs:{field:"size",header:"Size"}}),n("Column",{attrs:{field:"type",header:"Type"}})],1)],1),n("div",{staticClass:"card"},[n("h5",[e._v("Expand Mode")]),n("TreeTable",{attrs:{value:e.nodes,resizableColumns:!0,columnResizeMode:"expand",showGridlines:""}},[n("Column",{attrs:{field:"name",header:"Name",expander:!0}}),n("Column",{attrs:{field:"size",header:"Size"}}),n("Column",{attrs:{field:"type",header:"Type"}})],1)],1)]),n("div",{staticClass:"content-section documentation"},[n("TabView",[n("TabPanel",{attrs:{header:"Source"}},[n("CodeHighlight",[[e._v('\n<h3>Fit Mode</h3>\n<TreeTable :value="nodes" :resizableColumns="true" columnResizeMode="fit">\n    <Column field="name" header="Name" :expander="true"></Column>\n    <Column field="size" header="Size"></Column>\n    <Column field="type" header="Type"></Column>\n</TreeTable>\n\n<h3>Expand Mode</h3>\n<TreeTable :value="nodes" :resizableColumns="true" columnResizeMode="expand">\n    <Column field="name" header="Name" :expander="true"></Column>\n    <Column field="size" header="Size"></Column>\n    <Column field="type" header="Type"></Column>\n</TreeTable>\n')]],2),n("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n")])],1)],1)],1)])},o=[function(){var e=this,n=e._self._c;return n("div",{staticClass:"content-section introduction"},[n("div",{staticClass:"feature-intro"},[n("h1",[e._v("TreeTable "),n("span",[e._v("Column Resize")])]),n("p",[e._v('Columns can be resized using drag drop by setting the resizableColumns to true. There are two resize modes; "fit" and "expand". Fit is the default one and the overall table width does not change when a column is resized.\n                    In "expand" mode, table width also changes along with the column width.')])])])}],i=t("82f4"),r={data:function(){return{nodes:null}},nodeService:null,created:function(){this.nodeService=new i["a"]},mounted:function(){var e=this;this.nodeService.getTreeTableNodes().then((function(n){return e.nodes=n}))}},d=r,s=t("2877"),l=Object(s["a"])(d,a,o,!1,null,null,null);n["default"]=l.exports},"82f4":function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var a=t("d225"),o=t("b0b4"),i=function(){function e(){Object(a["a"])(this,e)}return Object(o["a"])(e,[{key:"getTreeTableNodes",value:function(){return fetch("demo/data/treetablenodes.json").then((function(e){return e.json()})).then((function(e){return e.root}))}},{key:"getTreeNodes",value:function(){return fetch("demo/data/treenodes.json").then((function(e){return e.json()})).then((function(e){return e.root}))}}])}()}}]);