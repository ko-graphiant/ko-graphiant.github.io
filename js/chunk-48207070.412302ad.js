(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-48207070"],{"160a":function(e,t,n){t=e.exports=n("2350")(!1),t.push([e.i,"button[data-v-7b76e4f6]{margin-right:.5rem}",""])},"3be8":function(e,t,n){"use strict";n.r(t);var s=function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("h5",[e._v("Single Selection")]),t("Tree",{attrs:{value:e.nodes,selectionMode:"single",selectionKeys:e.selectedKey1},on:{"update:selectionKeys":function(t){e.selectedKey1=t},"update:selection-keys":function(t){e.selectedKey1=t}}}),t("h5",[e._v("Multiple Selection with MetaKey")]),t("Tree",{attrs:{value:e.nodes,selectionMode:"multiple",selectionKeys:e.selectedKeys1},on:{"update:selectionKeys":function(t){e.selectedKeys1=t},"update:selection-keys":function(t){e.selectedKeys1=t}}}),t("h5",[e._v("Multiple Selection without MetaKey")]),t("Tree",{attrs:{value:e.nodes,selectionMode:"multiple",selectionKeys:e.selectedKeys2,metaKeySelection:!1},on:{"update:selectionKeys":function(t){e.selectedKeys2=t},"update:selection-keys":function(t){e.selectedKeys2=t}}}),t("h5",[e._v("Checkbox Selection")]),t("Tree",{attrs:{value:e.nodes,selectionMode:"checkbox",selectionKeys:e.selectedKeys3},on:{"update:selectionKeys":function(t){e.selectedKeys3=t},"update:selection-keys":function(t){e.selectedKeys3=t}}}),t("h5",[e._v("Events")]),t("Tree",{attrs:{value:e.nodes,selectionMode:"single",selectionKeys:e.selectedKey2,metaKeySelection:!1},on:{"update:selectionKeys":function(t){e.selectedKey2=t},"update:selection-keys":function(t){e.selectedKey2=t},"node-select":e.onNodeSelect,"node-unselect":e.onNodeUnselect}})],1)]),t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Source"}},[t("CodeHighlight",[[e._v('\n<h3>Single Selection</h3>\n<Tree :value="nodes" selectionMode="single" :selectionKeys.sync="selectedKey1"></Tree>\n\n<h3>Multiple Selection with MetaKey</h3>\n<Tree :value="nodes" selectionMode="multiple" :selectionKeys.sync="selectedKeys1"></Tree>\n\n<h3>Multiple Selection without MetaKey</h3>\n<Tree :value="nodes" selectionMode="multiple" :selectionKeys.sync="selectedKeys2" :metaKeySelection="false"></Tree>\n\n<h3>Checkbox Selection</h3>\n<Tree :value="nodes" selectionMode="checkbox" :selectionKeys.sync="selectedKeys3"></Tree>\n\n<h3>Events</h3>\n<Tree :value="nodes" selectionMode="single" :selectionKeys.sync="selectedKey2" :metaKeySelection="false"\n    @node-select="onNodeSelect" @node-unselect="onNodeUnselect"></Tree>\n')]],2),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v("\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        onNodeSelect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Selected', detail: node.label, life: 3000});\n        },\n        onNodeUnselect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Unselected', detail: node.label, life: 3000});\n        }\n    }\n}\n")])],1)],1)],1)])},o=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[e._v("Tree "),t("span",[e._v("Selection")])]),t("p",[e._v("Tree supports "),t("b",[e._v("single")]),e._v(", "),t("b",[e._v("multiple")]),e._v(" and "),t("b",[e._v("checkbox")]),e._v(" as selection modes.")])])])}],l=n("82f4"),c={data:function(){return{selectedKey1:null,selectedKey2:null,selectedKeys1:null,selectedKeys2:null,selectedKeys3:null,nodes:null}},nodeService:null,created:function(){this.nodeService=new l["a"]},mounted:function(){var e=this;this.nodeService.getTreeNodes().then((function(t){return e.nodes=t}))},methods:{onNodeSelect:function(e){this.$toast.add({severity:"success",summary:"Node Selected",detail:e.label,life:3e3})},onNodeUnselect:function(e){this.$toast.add({severity:"success",summary:"Node Unselected",detail:e.label,life:3e3})}}},i=c,d=(n("659b"),n("2877")),a=Object(d["a"])(i,s,o,!1,null,"7b76e4f6",null);t["default"]=a.exports},"4f88":function(e,t,n){var s=n("160a");s.__esModule&&(s=s.default),"string"===typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);var o=n("499e").default;o("d5a82486",s,!0,{sourceMap:!1,shadowMode:!1})},"659b":function(e,t,n){"use strict";n("4f88")},"82f4":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var s=n("d225"),o=n("b0b4"),l=function(){function e(){Object(s["a"])(this,e)}return Object(o["a"])(e,[{key:"getTreeTableNodes",value:function(){return fetch("demo/data/treetablenodes.json").then((function(e){return e.json()})).then((function(e){return e.root}))}},{key:"getTreeNodes",value:function(){return fetch("demo/data/treenodes.json").then((function(e){return e.json()})).then((function(e){return e.root}))}}])}()}}]);